# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"

env:
  CARGO_TERM_COLOR: always

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: go install github.com/google/addlicense@latest
      - run: addlicense -check .
      - run: cargo clippy
      - run: npm ci
        working-directory: vscode-gn
      - run: npm run lint
        working-directory: vscode-gn

  language-server:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-musl
          - os: macos-latest
            rust_target: aarch64-apple-darwin
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc
    name: language-server (${{ matrix.rust_target }})
    runs-on: ${{ matrix.os }}
    env:
      CARGO_BUILD_TARGET: ${{ matrix.rust_target }}
    needs: lint
    steps:
    - uses: actions/checkout@v4
    - run: sudo apt-get install musl-tools
      if: matrix.os == 'ubuntu-latest'
    - uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.rust_target }}
    - uses: Swatinem/rust-cache@v2
    - run: cargo build --release --target=${{ matrix.rust_target }} --verbose
    - run: cargo test --target=${{ matrix.rust_target }} --verbose
    - uses: actions/upload-artifact@v4
      with:
        name: gn-language-server-${{ matrix.rust_target }}
        path: target/${{ matrix.rust_target }}/release/gn-language-server*

  vscode-extension:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-musl
            vscode_target: linux-x64
          - os: macos-latest
            rust_target: aarch64-apple-darwin
            vscode_target: darwin-arm64
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc
            vscode_target: win32-x64
    runs-on: ${{ matrix.os }}
    env:
      CARGO_BUILD_TARGET: ${{ matrix.rust_target }}
    name: vscode-extension (${{ matrix.vscode_target }})
    needs: lint
    steps:
    - uses: actions/checkout@v4
    - run: sudo apt-get install musl-tools
      if: matrix.os == 'ubuntu-latest'
    - uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.rust_target }}
    - uses: Swatinem/rust-cache@v2
    - uses: actions/setup-node@v4
      with:
        node-version: 20.x
    - run: npx -y vsce package --target=${{ matrix.vscode_target }}
      working-directory: vscode-gn
    - uses: actions/upload-artifact@v4
      with:
        name: vscode-gn-vsix-${{ matrix.vscode_target }}
        path: vscode-gn/*.vsix

  publish:
    runs-on: ubuntu-latest
    needs: vscode-extension
    if: success() && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
      - run: npx -y vsce publish --packagePath vscode-gn/*.vsix
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
